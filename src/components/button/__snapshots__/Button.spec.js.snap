// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> <Styled.BusyLoader /> Should render correctly 1`] = `
.c0 {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c0 > svg {
  display: block;
}

<span
  className="c0"
/>
`;

exports[`<Button /> <Styled.Button /> Should render correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  max-width: 320px;
  border-radius: 9999px;
  padding: 0 20px;
  font-size: 12px;
  text-align: center;
  text-transform: uppercase;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: solid 1px;
  background-color: #FFFFFF;
  border-color: #cfcfcf;
  color: #1A8099;
}

.c0 > span {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0:hover {
  border-color: #3EBEDE;
  color: #3EBEDE;
}

<button
  className="c0"
  color="secondary"
>
  Test
</button>
`;

exports[`<Button /> <Styled.Button /> Should render disabled correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  max-width: 320px;
  border-radius: 9999px;
  padding: 0 20px;
  font-size: 12px;
  text-align: center;
  text-transform: uppercase;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: solid 1px;
  background-color: #FFFFFF;
  border-color: #bbbbbb;
  color: #bbbbbb;
  cursor: not-allowed;
}

.c0 > span {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<button
  className="c0"
  color="secondary"
  disabled={true}
>
  Test
</button>
`;

exports[`<Button /> <Styled.Button /> Should render primary color correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  max-width: 320px;
  border-radius: 9999px;
  padding: 0 20px;
  font-size: 12px;
  text-align: center;
  text-transform: uppercase;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: none;
  background-color: #1A8099;
  color: #FFFFFF;
}

.c0 > span {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0:hover {
  background-color: #3EBEDE;
}

<button
  className="c0"
  color="primary"
>
  Test
</button>
`;

exports[`<Button /> <Styled.Button /> Should render primary disabled correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  max-width: 320px;
  border-radius: 9999px;
  padding: 0 20px;
  font-size: 12px;
  text-align: center;
  text-transform: uppercase;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  border: none;
  background-color: #bbbbbb;
  color: #6a6a6a;
  cursor: not-allowed;
}

.c0 > span {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<button
  className="c0"
  color="primary"
  disabled={true}
>
  Test
</button>
`;

exports[`<Button /> <Styled.Button /> Should render selected correctly 1`] = `
.c0 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  max-width: 320px;
  border-radius: 9999px;
  padding: 0 20px;
  font-size: 12px;
  text-align: center;
  text-transform: uppercase;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  background-color: #0E5061;
  color: #FFFFFF;
  border: none;
}

.c0 > span {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<button
  className="c0"
  color="secondary"
  selected={true}
>
  Test
</button>
`;

exports[`<Button /> <Styled.Icon /> Should render correctly 1`] = `
.c0 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 5px;
  -webkit-transform: translateY(-1px);
  -ms-transform: translateY(-1px);
  transform: translateY(-1px);
}

.c0 > svg {
  display: block;
}

<span
  className="c0"
/>
`;

exports[`<Button /> Should render busy correctly 1`] = `
<Buttonstyles__Button
  as="button"
  color="secondary"
  disabled={true}
  selected={false}
  type="button"
>
  <span>
    Test
    <Buttonstyles__BusyLoader>
      <BusyLoader
        timer={10}
      />
    </Buttonstyles__BusyLoader>
  </span>
</Buttonstyles__Button>
`;

exports[`<Button /> Should render correctly 1`] = `
<Buttonstyles__Button
  as="button"
  color="secondary"
  disabled={false}
  selected={false}
  type="button"
>
  <span>
    Test
  </span>
</Buttonstyles__Button>
`;

exports[`<Button /> Should render like an anchor correctly 1`] = `
<Buttonstyles__Button
  as="a"
  color="secondary"
  disabled={false}
  selected={false}
>
  <span>
    Test
  </span>
</Buttonstyles__Button>
`;

exports[`<Button /> Should render like an submit correctly 1`] = `
<Buttonstyles__Button
  as="button"
  color="secondary"
  disabled={false}
  selected={false}
  type="submit"
>
  <span>
    Test
  </span>
</Buttonstyles__Button>
`;

exports[`<Button /> Should render with icon correctly 1`] = `
<Buttonstyles__Button
  as="button"
  color="secondary"
  disabled={false}
  selected={false}
  type="button"
>
  <span>
    <Buttonstyles__Icon>
      <Icon
        size="12px"
        type="Calendar"
      />
    </Buttonstyles__Icon>
    Test
  </span>
</Buttonstyles__Button>
`;
